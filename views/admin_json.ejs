<!DOCTYPE html>
<html lang="tr">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Yıllık JSON Editor</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 20px;
      max-width: 600px;
      margin: auto;
    }
    input, textarea, select, button {
      width: 100%;
      margin-bottom: 10px;
      padding: 10px;
      box-sizing: border-box;
      font-size: 16px;
    }
    .student {
      border: 1px solid #ccc;
      padding: 10px;
      margin-bottom: 10px;
      border-radius: 5px;
      background: #f9f9f9;
    }
    .socials-preview {
      font-size: 14px;
      background: #eee;
      padding: 6px;
      white-space: pre-wrap;
    }
    .inline-group {
      display: flex;
      flex-wrap: wrap;
      gap: 10px;
    }
    .inline-group input, .inline-group select {
      flex: 1 1 48%;
    }
    #outputJson {
      height: 200px;
    }
  </style>
</head>
<body><a href="/admin"><h2>Yıllık JSON Editor</h2></a><label for="yearSelect">Yıl Seçin:</label> <select id="yearSelect"></select>

<label for="classSelect">Sınıf Seçin:</label> <select id="classSelect"></select>

<div id="studentList"></div><h3>Yeni Öğrenci Ekle</h3>
<input id="number" placeholder="Öğrenci Numarası" />
<input id="name" placeholder="Ad Soyad" />
<form id="imageUploadForm" enctype="multipart/form-data" style="margin-bottom:10px;">
  <input type="file" id="imageUpload" name="image" accept="image/*" />
  <button type="submit">Fotoğrafı Yükle</button>
</form>
<input id="image" placeholder="Görsel URL" readonly />
<input id="bio" placeholder="Biyografi" />
<input id="department" placeholder="Bölüm" /><h4>Sosyal Medya (Ad + Link)</h4>
<div class="inline-group">
  <select id="studentSocialSelect" onchange="handleStudentSocialSelect()">
    <option value="">Seçiniz</option>
    <option value="Instagram">Instagram</option>
    <option value="TikTok">TikTok</option>
    <option value="YouTube">YouTube</option>
    <option value="Twitter">Twitter</option>
    <option value="GitHub">GitHub</option>
    <option value="LinkedIn">LinkedIn</option>
    <option value="ozel">Özel</option>
  </select>
  <input id="studentSocialCustom" placeholder="Özel Sosyal Medya Adı" style="display:none;" />
  <input id="studentSocialValue" placeholder="Kullanıcı Adı veya Link" />
</div>
<button onclick="addSocial()">Sosyal Medya Ekle</button>
<div id="socialsPreview" class="socials-preview"></div><button onclick="addStudent()">Öğrenci Ekle</button>

<h3>Öğrenciye Yorum Ekle</h3>
<select id="commentTarget"></select>
<input id="commentText" placeholder="Yorum Metni" />
<input id="commentAuthor" placeholder="Yorum Yapan" />
<input id="commentInsta" placeholder="Instagram Kullanıcı Adı veya Link" />
<input id="commentDate" type="date" />
<button onclick="addComment()">Yorum Ekle</button><h3>Oluşturulan JSON</h3>
<textarea id="outputJson" readonly></textarea>
<button onclick="copyToClipboard()">JSON'u Kopyala</button><script>
let jsonData = {};
let socials = [];

async function loadJSON() {
  const res = await fetch('https://yillik75.com.tr/data.json');
  jsonData = await res.json();
  const years = Object.keys(jsonData.years);
  const yearSelect = document.getElementById('yearSelect');
  yearSelect.innerHTML = years.map(y => `<option value="${y}">${y}</option>`).join('');
  yearSelect.onchange = populateClasses;
  populateClasses();
}

function populateClasses() {
  const year = document.getElementById('yearSelect').value;
  const classSelect = document.getElementById('classSelect');
  const classes = Object.keys(jsonData.years[year].classes);
  classSelect.innerHTML = classes.map(c => `<option value="${c}">${c}</option>`).join('');
  populateStudents();
}

function populateStudents() {
  const year = document.getElementById('yearSelect').value;
  const className = document.getElementById('classSelect').value;
  const students = jsonData.years[year].classes[className].students || [];
  const studentList = document.getElementById('studentList');
  const commentTarget = document.getElementById('commentTarget');
  studentList.innerHTML = students.map(s => `<div class="student"><strong>${s.name}</strong> (${s.number})</div>`).join('');
  commentTarget.innerHTML = students.map((s, i) => `<option value="${i}">${s.name}</option>`).join('');
  updateOutput();
}

function addSocial() {
  let name = document.getElementById('studentSocialSelect').value;
  const custom = document.getElementById('studentSocialCustom').value;
  const valueRaw = document.getElementById('studentSocialValue').value.trim();

  if (!name) return;
  if (name === 'ozel') name = custom;
  if (!name || !valueRaw) return;

  const baseUrls = {
    Instagram: "https://instagram.com/",
    TikTok: "https://tiktok.com/@",
    YouTube: "https://youtube.com/@",
    Twitter: "https://twitter.com/",
    GitHub: "https://github.com/",
    LinkedIn: "https://linkedin.com/in/"
  };

  let link = valueRaw;
  if (baseUrls[name] && !/^https?:\/\//i.test(valueRaw)) {
    link = baseUrls[name] + valueRaw.replace(/^@/, "");
  }

  socials.push({ name, link });
  document.getElementById('socialsPreview').innerText = JSON.stringify(socials, null, 2);

  document.getElementById('studentSocialSelect').value = '';
  document.getElementById('studentSocialCustom').value = '';
  document.getElementById('studentSocialValue').value = '';
  handleStudentSocialSelect();
}

function addStudent() {
  const year = document.getElementById('yearSelect').value;
  const className = document.getElementById('classSelect').value;
  const student = {
    number: document.getElementById('number').value,
    name: document.getElementById('name').value,
    image: document.getElementById('image').value || "/placeholder.svg",
    bio: document.getElementById('bio').value,
    department: document.getElementById('department').value,
    socials: socials
  };
  jsonData.years[year].classes[className].students.push(student);
  socials = [];
  document.getElementById('socialsPreview').innerText = '';
  document.querySelectorAll('#number, #name, #image, #bio, #department').forEach(i => i.value = '');
  populateStudents();
}

function handleSocialSelect() {
  const selected = document.getElementById('commentSocialSelect').value;
  const custom = document.getElementById('commentSocialCustom');
  if (selected === 'ozel') {
    custom.style.display = 'block';
  } else {
    custom.style.display = 'none';
  }
}

function handleStudentSocialSelect() {
  const selected = document.getElementById('studentSocialSelect').value;
  const custom = document.getElementById('studentSocialCustom');
  if (selected === 'ozel') {
    custom.style.display = 'block';
  } else {
    custom.style.display = 'none';
  }
}

function addComment() {
  const year = document.getElementById('yearSelect').value;
  const className = document.getElementById('classSelect').value;
  const students = jsonData.years[year].classes[className].students;
  const index = parseInt(document.getElementById('commentTarget').value);
  const text = document.getElementById('commentText').value;
  const author = document.getElementById('commentAuthor').value;
  const linkRaw = document.getElementById('commentInsta').value.trim();
  const date = document.getElementById('commentDate').value.split('-').reverse().join('.');

  let link = linkRaw;
  if (linkRaw && !/^https?:\/\//i.test(linkRaw)) {
    link = "https://instagram.com/" + linkRaw.replace(/^@/, "");
  }

  const comment = { text, author, insta: link, date };
  if (!students[index].comments) students[index].comments = [];
  students[index].comments.push(comment);

  document.getElementById('commentText').value = '';
  document.getElementById('commentAuthor').value = '';
  document.getElementById('commentInsta').value = '';
  document.getElementById('commentDate').value = '';
  updateOutput();
}

function updateOutput() {
  document.getElementById('outputJson').value = JSON.stringify(jsonData, null, 2);
}

function copyToClipboard() {
  const output = document.getElementById('outputJson');
  output.select();
  document.execCommand('copy');
  alert('JSON kopyalandı!');
}

// Set current date automatically for commentDate input
document.addEventListener('DOMContentLoaded', function() {
  const dateInput = document.getElementById('commentDate');
  if (dateInput) {
    const today = new Date();
    const yyyy = today.getFullYear();
    const mm = String(today.getMonth() + 1).padStart(2, '0');
    const dd = String(today.getDate()).padStart(2, '0');
    dateInput.value = `${yyyy}-${mm}-${dd}`;
  }
});

document.getElementById('imageUploadForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    const fileInput = document.getElementById('imageUpload');
    const file = fileInput.files[0];
    if (!file) {
        alert('Lütfen bir fotoğraf seçin.');
        return;
    }
    const formData = new FormData();
    formData.append('image', file);

    const btn = this.querySelector('button[type="submit"]');
    btn.disabled = true;
    btn.textContent = 'Yükleniyor...';

    try {
        const res = await fetch('/upload-image', {
            method: 'POST',
            body: formData
        });
        const data = await res.json();
        if (data.url) {
            document.getElementById('image').value = data.url;
            alert('Fotoğraf başarıyla yüklendi!');
        } else {
            alert('Yükleme başarısız: ' + (data.error || ''));
        }
    } catch (err) {
        alert('Yükleme sırasında bir hata oluştu!');
    }
    btn.disabled = false;
    btn.textContent = 'Fotoğrafı Yükle';
});

loadJSON();
</script>
</body>
</html>